syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/any.proto";
import "scalapb/scalapb.proto";


option (scalapb.options) = {
  // use a custom Scala package name
  // package_name: "io.ontherocks.introgrpc.demo"

  // don't append file name to package
  flat_package: true

  // generate one Scala file for all messages (services still get their own file)
  single_file: true

  // add imports to generated file
  // useful when extending traits or using custom types
  // import: "io.ontherocks.hellogrpc.RockingMessage"

  // code to put at the top of generated file
  // works only with `single_file: true`
  //preamble: "sealed trait SomeSealedTrait"
};

/*
 * Demoes various customization options provided by ScalaPBs.
 */

package sdp.grpc.services;

import "misc/sdp.proto";
import "common.proto";

message ProtoCQLResult {
  ProtoAny result = 1;
}

message ProtoCQLQuery {
    string statement = 1;
    ProtoAny parameters = 2;
    google.protobuf.Int32Value consistency = 3;
    int32 fetchSize = 4;
}

message ProtoCQLUpdate {
    repeated string statements = 1;
    ProtoAny parameters = 2;
    google.protobuf.Int32Value consistency = 3;
    google.protobuf.BoolValue batch = 4;
}

service CQLServices {
  rpc greeting(stream HelloMsg) returns (stream HelloMsg) {}
}
